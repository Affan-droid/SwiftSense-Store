{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"F:\\\\pics\\\\Courses\\\\new courses\\\\react courses\\\\React Tutorial and Projects Course\\\\11. Tech Store\\\\22.1 21-Footer Component.zip\\\\react-tech-store-master\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\pics\\\\Courses\\\\new courses\\\\react courses\\\\React Tutorial and Projects Course\\\\11. Tech Store\\\\22.1 21-Footer Component.zip\\\\react-tech-store-master\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bouncer = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar Vector_1 = require(\"../../Core/Particle/Vector\");\n\nvar Bouncer =\n/*#__PURE__*/\nfunction () {\n  function Bouncer(container) {\n    _classCallCheck(this, Bouncer);\n\n    this.container = container;\n  }\n\n  _createClass(Bouncer, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container;\n      var options = container.actualOptions;\n      var mouse = container.interactivity.mouse;\n      var events = options.interactivity.events;\n      var divs = events.onDiv;\n      return mouse.position && events.onHover.enable && Utils_1.Utils.isInArray(Enums_1.HoverMode.bounce, events.onHover.mode) || Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.bounce, divs);\n    }\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _this = this;\n\n      var container = this.container;\n      var options = container.actualOptions;\n      var events = options.interactivity.events;\n      var mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n      var hoverEnabled = events.onHover.enable;\n      var hoverMode = events.onHover.mode;\n      var divs = events.onDiv;\n\n      if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.bounce, hoverMode)) {\n        this.processMouseBounce();\n      } else {\n        Utils_1.Utils.divModeExecute(Enums_1.DivMode.bounce, divs, function (selector, div) {\n          return _this.singleSelectorBounce(selector, div);\n        });\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"processMouseBounce\",\n    value: function processMouseBounce() {\n      var container = this.container;\n      var pxRatio = container.retina.pixelRatio;\n      var tolerance = 10 * pxRatio;\n      var mousePos = container.interactivity.mouse.position;\n      var radius = container.retina.bounceModeDistance;\n\n      if (mousePos) {\n        this.processBounce(mousePos, radius, new Utils_1.Circle(mousePos.x, mousePos.y, radius + tolerance));\n      }\n    }\n  }, {\n    key: \"singleSelectorBounce\",\n    value: function singleSelectorBounce(selector, div) {\n      var _this2 = this;\n\n      var container = this.container;\n      var query = document.querySelectorAll(selector);\n\n      if (!query.length) {\n        return;\n      }\n\n      query.forEach(function (item) {\n        var elem = item;\n        var pxRatio = container.retina.pixelRatio;\n        var pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        };\n        var radius = elem.offsetWidth / 2 * pxRatio;\n        var tolerance = 10 * pxRatio;\n        var area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, radius + tolerance) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n\n        _this2.processBounce(pos, radius, area);\n      });\n    }\n  }, {\n    key: \"processBounce\",\n    value: function processBounce(position, radius, area) {\n      var query = this.container.particles.quadTree.query(area);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = query[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var particle = _step.value;\n\n          if (area instanceof Utils_1.Circle) {\n            Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(particle), {\n              position: position,\n              radius: radius,\n              mass: Math.pow(radius, 2) * Math.PI / 2,\n              velocity: Vector_1.Vector.create(0, 0),\n              factor: {\n                horizontal: 0,\n                vertical: 0\n              }\n            });\n          } else if (area instanceof Utils_1.Rectangle) {\n            Utils_1.Utils.rectBounce(particle, Utils_1.Utils.calculateBounds(position, radius));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Bouncer;\n}();\n\nexports.Bouncer = Bouncer;","map":null,"metadata":{},"sourceType":"script"}