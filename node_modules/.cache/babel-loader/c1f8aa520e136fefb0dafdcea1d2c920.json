{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"F:\\\\pics\\\\Courses\\\\new courses\\\\react courses\\\\React Tutorial and Projects Course\\\\11. Tech Store\\\\22.1 21-Footer Component.zip\\\\react-tech-store-master\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _slicedToArray = require(\"F:\\\\pics\\\\Courses\\\\new courses\\\\react courses\\\\React Tutorial and Projects Course\\\\11. Tech Store\\\\22.1 21-Footer Component.zip\\\\react-tech-store-master\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"F:\\\\pics\\\\Courses\\\\new courses\\\\react courses\\\\React Tutorial and Projects Course\\\\11. Tech Store\\\\22.1 21-Footer Component.zip\\\\react-tech-store-master\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\pics\\\\Courses\\\\new courses\\\\react courses\\\\React Tutorial and Projects Course\\\\11. Tech Store\\\\22.1 21-Footer Component.zip\\\\react-tech-store-master\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\n\nvar Canvas_1 = require(\"./Canvas\");\n\nvar Particles_1 = require(\"./Particles\");\n\nvar Retina_1 = require(\"./Retina\");\n\nvar FrameManager_1 = require(\"./FrameManager\");\n\nvar Options_1 = require(\"../Options/Classes/Options\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Vector_1 = require(\"./Particle/Vector\");\n\nvar Container =\n/*#__PURE__*/\nfunction () {\n  function Container(id, sourceOptions) {\n    var _this = this;\n\n    _classCallCheck(this, Container);\n\n    this.id = id;\n    this.fpsLimit = 60;\n    this.firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this.retina = new Retina_1.Retina(this);\n    this.canvas = new Canvas_1.Canvas(this);\n    this.particles = new Particles_1.Particles(this);\n    this.drawer = new FrameManager_1.FrameManager(this);\n    this.pathGenerator = {\n      generate: function generate() {\n        var v = Vector_1.Vector.create(0, 0);\n        v.length = Math.random();\n        v.angle = Math.random() * Math.PI * 2;\n        return v;\n      },\n      init: function init() {},\n      update: function update() {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this._options = new Options_1.Options();\n    this.actualOptions = new Options_1.Options();\n\n    for (var _len = arguments.length, presets = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      presets[_key - 2] = arguments[_key];\n    }\n\n    for (var _i = 0; _i < presets.length; _i++) {\n      var preset = presets[_i];\n\n      this._options.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n    var shapes = Utils_1.Plugins.getSupportedShapes();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = shapes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var type = _step.value;\n        var drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n        if (drawer) {\n          this.drawers.set(type, drawer);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (this._options) {\n      this._options.load(this._sourceOptions);\n    }\n\n    this.eventListeners = new Utils_1.EventListeners(this);\n\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this.intersectionObserver = new IntersectionObserver(function (entries) {\n        return _this.intersectionManager(entries);\n      });\n    }\n  }\n\n  _createClass(Container, [{\n    key: \"play\",\n    value: function play(force) {\n      var needsUpdate = this.paused || force;\n\n      if (this.firstStart && !this.actualOptions.autoPlay) {\n        this.firstStart = false;\n        return;\n      }\n\n      if (this.paused) {\n        this.paused = false;\n      }\n\n      if (needsUpdate) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.plugins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                plugin = _step2$value[1];\n\n            if (plugin.play) {\n              plugin.play();\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        this.lastFrameTime = performance.now();\n      }\n\n      this.draw();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.drawAnimationFrame !== undefined) {\n        Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n        delete this.drawAnimationFrame;\n      }\n\n      if (this.paused) {\n        return;\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              plugin = _step3$value[1];\n\n          if (plugin.pause) {\n            plugin.pause();\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (!this.pageHidden) {\n        this.paused = true;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this2 = this;\n\n      this.drawAnimationFrame = Utils_1.Utils.animate(function (timestamp) {\n        return _this2.drawer.nextFrame(timestamp);\n      });\n    }\n  }, {\n    key: \"getAnimationStatus\",\n    value: function getAnimationStatus() {\n      return !this.paused;\n    }\n  }, {\n    key: \"setNoise\",\n    value: function setNoise(noiseOrGenerator, init, update) {\n      this.setPath(noiseOrGenerator, init, update);\n    }\n  }, {\n    key: \"setPath\",\n    value: function setPath(pathOrGenerator, init, update) {\n      if (!pathOrGenerator) {\n        return;\n      }\n\n      if (typeof pathOrGenerator === \"function\") {\n        this.pathGenerator.generate = pathOrGenerator;\n\n        if (init) {\n          this.pathGenerator.init = init;\n        }\n\n        if (update) {\n          this.pathGenerator.update = update;\n        }\n      } else {\n        if (pathOrGenerator.generate) {\n          this.pathGenerator.generate = pathOrGenerator.generate;\n        }\n\n        if (pathOrGenerator.init) {\n          this.pathGenerator.init = pathOrGenerator.init;\n        }\n\n        if (pathOrGenerator.update) {\n          this.pathGenerator.update = pathOrGenerator.update;\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stop();\n      this.canvas.destroy();\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.drawers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              drawer = _step4$value[1];\n\n          if (drawer.destroy) {\n            drawer.destroy(this);\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.drawers.keys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var key = _step5.value;\n          this.drawers.delete(key);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.destroyed = true;\n    }\n  }, {\n    key: \"exportImg\",\n    value: function exportImg(callback) {\n      this.exportImage(callback);\n    }\n  }, {\n    key: \"exportImage\",\n    value: function exportImage(callback, type, quality) {\n      var _a;\n\n      return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n  }, {\n    key: \"exportConfiguration\",\n    value: function exportConfiguration() {\n      return JSON.stringify(this.actualOptions, undefined, 2);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.stop();\n      return this.start();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._options = new Options_1.Options();\n      return this.refresh();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.started) {\n        return;\n      }\n\n      this.firstStart = true;\n      this.started = false;\n      this.eventListeners.removeListeners();\n      this.pause();\n      this.particles.clear();\n      this.canvas.clear();\n\n      if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n        this.intersectionObserver.observe(this.interactivity.element);\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this.plugins[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n              plugin = _step6$value[1];\n\n          if (plugin.stop) {\n            plugin.stop();\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = this.plugins.keys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          this.plugins.delete(key);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      this.particles.linksColors = new Map();\n      delete this.particles.grabLineColor;\n      delete this.particles.linksColor;\n    }\n  }, {\n    key: \"loadTheme\",\n    value: function loadTheme(name) {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.actualOptions.setTheme(name);\n                _context.next = 3;\n                return this.refresh();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, _step8$value, plugin;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.started) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.next = 4;\n                return this.init();\n\n              case 4:\n                this.started = true;\n                this.eventListeners.addListeners();\n\n                if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n                  this.intersectionObserver.observe(this.interactivity.element);\n                }\n\n                _iteratorNormalCompletion8 = true;\n                _didIteratorError8 = false;\n                _iteratorError8 = undefined;\n                _context2.prev = 10;\n                _iterator8 = this.plugins[Symbol.iterator]();\n\n              case 12:\n                if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                _step8$value = _slicedToArray(_step8.value, 2), plugin = _step8$value[1];\n\n                if (!(plugin.startAsync !== undefined)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _context2.next = 17;\n                return plugin.startAsync();\n\n              case 17:\n                _context2.next = 20;\n                break;\n\n              case 19:\n                if (plugin.start !== undefined) {\n                  plugin.start();\n                }\n\n              case 20:\n                _iteratorNormalCompletion8 = true;\n                _context2.next = 12;\n                break;\n\n              case 23:\n                _context2.next = 29;\n                break;\n\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](10);\n                _didIteratorError8 = true;\n                _iteratorError8 = _context2.t0;\n\n              case 29:\n                _context2.prev = 29;\n                _context2.prev = 30;\n\n                if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                  _iterator8.return();\n                }\n\n              case 32:\n                _context2.prev = 32;\n\n                if (!_didIteratorError8) {\n                  _context2.next = 35;\n                  break;\n                }\n\n                throw _iteratorError8;\n\n              case 35:\n                return _context2.finish(32);\n\n              case 36:\n                return _context2.finish(29);\n\n              case 37:\n                this.play();\n\n              case 38:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[10, 25, 29, 37], [30,, 32, 36]]);\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return __awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var availablePlugins, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, _step9$value, id, plugin, _iteratorNormalCompletion10, _didIteratorError10, _iteratorError10, _iterator10, _step10, _step10$value, drawer, _iteratorNormalCompletion11, _didIteratorError11, _iteratorError11, _iterator11, _step11, _step11$value;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.actualOptions = new Options_1.Options();\n                this.actualOptions.load(this._options);\n                this.retina.init();\n                this.canvas.init();\n                this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n                this.actualOptions.setTheme(undefined);\n                this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 60;\n                availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n                _iteratorNormalCompletion9 = true;\n                _didIteratorError9 = false;\n                _iteratorError9 = undefined;\n                _context3.prev = 11;\n\n                for (_iterator9 = availablePlugins[Symbol.iterator](); !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                  _step9$value = _slicedToArray(_step9.value, 2), id = _step9$value[0], plugin = _step9$value[1];\n                  this.plugins.set(id, plugin);\n                }\n\n                _context3.next = 19;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](11);\n                _didIteratorError9 = true;\n                _iteratorError9 = _context3.t0;\n\n              case 19:\n                _context3.prev = 19;\n                _context3.prev = 20;\n\n                if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                  _iterator9.return();\n                }\n\n              case 22:\n                _context3.prev = 22;\n\n                if (!_didIteratorError9) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                throw _iteratorError9;\n\n              case 25:\n                return _context3.finish(22);\n\n              case 26:\n                return _context3.finish(19);\n\n              case 27:\n                _iteratorNormalCompletion10 = true;\n                _didIteratorError10 = false;\n                _iteratorError10 = undefined;\n                _context3.prev = 30;\n                _iterator10 = this.drawers[Symbol.iterator]();\n\n              case 32:\n                if (_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done) {\n                  _context3.next = 40;\n                  break;\n                }\n\n                _step10$value = _slicedToArray(_step10.value, 2), drawer = _step10$value[1];\n\n                if (!drawer.init) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _context3.next = 37;\n                return drawer.init(this);\n\n              case 37:\n                _iteratorNormalCompletion10 = true;\n                _context3.next = 32;\n                break;\n\n              case 40:\n                _context3.next = 46;\n                break;\n\n              case 42:\n                _context3.prev = 42;\n                _context3.t1 = _context3[\"catch\"](30);\n                _didIteratorError10 = true;\n                _iteratorError10 = _context3.t1;\n\n              case 46:\n                _context3.prev = 46;\n                _context3.prev = 47;\n\n                if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n                  _iterator10.return();\n                }\n\n              case 49:\n                _context3.prev = 49;\n\n                if (!_didIteratorError10) {\n                  _context3.next = 52;\n                  break;\n                }\n\n                throw _iteratorError10;\n\n              case 52:\n                return _context3.finish(49);\n\n              case 53:\n                return _context3.finish(46);\n\n              case 54:\n                _iteratorNormalCompletion11 = true;\n                _didIteratorError11 = false;\n                _iteratorError11 = undefined;\n                _context3.prev = 57;\n                _iterator11 = this.plugins[Symbol.iterator]();\n\n              case 59:\n                if (_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done) {\n                  _context3.next = 71;\n                  break;\n                }\n\n                _step11$value = _slicedToArray(_step11.value, 2), plugin = _step11$value[1];\n\n                if (!plugin.init) {\n                  _context3.next = 65;\n                  break;\n                }\n\n                plugin.init(this.actualOptions);\n                _context3.next = 68;\n                break;\n\n              case 65:\n                if (!(plugin.initAsync !== undefined)) {\n                  _context3.next = 68;\n                  break;\n                }\n\n                _context3.next = 68;\n                return plugin.initAsync(this.actualOptions);\n\n              case 68:\n                _iteratorNormalCompletion11 = true;\n                _context3.next = 59;\n                break;\n\n              case 71:\n                _context3.next = 77;\n                break;\n\n              case 73:\n                _context3.prev = 73;\n                _context3.t2 = _context3[\"catch\"](57);\n                _didIteratorError11 = true;\n                _iteratorError11 = _context3.t2;\n\n              case 77:\n                _context3.prev = 77;\n                _context3.prev = 78;\n\n                if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n                  _iterator11.return();\n                }\n\n              case 80:\n                _context3.prev = 80;\n\n                if (!_didIteratorError11) {\n                  _context3.next = 83;\n                  break;\n                }\n\n                throw _iteratorError11;\n\n              case 83:\n                return _context3.finish(80);\n\n              case 84:\n                return _context3.finish(77);\n\n              case 85:\n                this.canvas.resize();\n                this.particles.init();\n                this.particles.setDensity();\n\n              case 88:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[11, 15, 19, 27], [20,, 22, 26], [30, 42, 46, 54], [47,, 49, 53], [57, 73, 77, 85], [78,, 80, 84]]);\n      }));\n    }\n  }, {\n    key: \"intersectionManager\",\n    value: function intersectionManager(entries) {\n      if (!this.actualOptions.pauseOnOutsideViewport) {\n        return;\n      }\n\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = entries[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var entry = _step12.value;\n\n          if (entry.target !== this.interactivity.element) {\n            continue;\n          }\n\n          if (entry.isIntersecting) {\n            this.play();\n          } else {\n            this.pause();\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    }\n  }, {\n    key: \"sourceOptions\",\n    get: function get() {\n      return this._sourceOptions;\n    }\n  }]);\n\n  return Container;\n}();\n\nexports.Container = Container;","map":null,"metadata":{},"sourceType":"script"}